{"version":3,"sources":["../../src/models/Model.js"],"names":["db","connection","Model","table","select","data","undefined","Error","filterItems","isFirst","where","first","insert","inserted","delete","deleted","update","updated"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;AACA,IAAMA,KAAKC,sBAAX;;IACMC,K;AACF,mBAAYC,KAAZ,EAAkB;AAAA;;AACd,aAAKA,KAAL,GAAaA,KAAb;AACH;;;;;;;;;;;oCAEO,KAAKA,K;;;;;iEAAc,K;;;;;uCAECH,GAAG,KAAKG,KAAR,EAAeC,MAAf,CAAsB,GAAtB,C;;;AAAdC,oC;;sCACH,CAACA,IAAD,IAASA,SAASC,SAAlB,IAA+BD,QAAQ,E;;;;;iEAAW,K;;;iEAC9CA,I;;;;;sCAED,IAAIE,KAAJ,a;;;;;;;;;;;;;;;;;;;kGAIJC,W;oBAAaC,O,uEAAU,K;;;;;;oCACzB,KAAKN,K;;;;;kEAAc,K;;;AACnBE,oC;;;qCAEGI,O;;;;;;uCACcT,GAAG,KAAKG,KAAR,EAAeC,MAAf,CAAsB,GAAtB,EAA2BM,KAA3B,CAAiCF,WAAjC,EAA8CG,KAA9C,E;;;AAAbN,oC;;;;;;uCAEaL,GAAG,KAAKG,KAAR,EAAeC,MAAf,CAAsB,GAAtB,EAA2BM,KAA3B,CAAiCF,WAAjC,C;;;AAAbH,oC;;;sCAED,CAACA,IAAD,IAASA,SAAS,IAAlB,IAA0BA,SAASC,SAAnC,IAAgDD,QAAQ,E;;;;;kEAAW,K;;;kEAE/DA,I;;;;;sCAGD,IAAIE,KAAJ,c;;;;;;;;;;;;;;;;;;;kGAIDF,I;;;;;;oCACL,KAAKF,K;;;;;kEAAc,K;;;;;oCAEfE,I;;;;;sCAAY,IAAIE,KAAJ,wCAA8C,KAAKJ,KAAnD,S;;;;uCACOH,GAAG,KAAKG,KAAR,EAAeS,MAAf,CAAsBP,IAAtB,C;;;AAAjBQ,wC;;sCACH,CAACA,QAAD,IAAaA,aAAaP,SAA1B,IAAuCO,YAAY,E;;;;;kEAAW,K;;;kEAE1D,I;;;;;sCAGD,IAAIN,KAAJ,c;;;;;;;;;;;;;;;;;;;kGAIDC,W;;;;;;oCACL,KAAKL,K;;;;;kEAAc,K;;;;;uCAEGH,GAAG,KAAKG,KAAR,EAAeO,KAAf,CAAqBF,WAArB,EAAkCM,MAAlC,E;;;AAAhBC,uC;;sCACH,CAACA,OAAD,IAAYA,YAAYT,SAAxB,IAAqCS,WAAW,E;;;;;kEAAW,K;;;;;;;;;sCAExD,IAAIR,KAAJ,c;;;;;;;;;;;;;;;;;;;kGAIDC,W,EAAaH,I;;;;;;oCAClB,KAAKF,K;;;;;kEAAc,K;;;;;uCAEGH,GAAG,KAAKG,KAAR,EAAea,MAAf,CAAsBX,IAAtB,EAA4BK,KAA5B,CAAkCF,WAAlC,C;;;AAAhBS,uC;;sCACH,CAACA,OAAD,IAAYA,YAAYX,SAAxB,IAAqCW,WAAW,E;;;;;kEAAW,K;;;;;;;;;sCAExD,IAAIV,KAAJ,c;;;;;;;;;;;;;;;;;;;;;kBAIHL,K","file":"Model.js","sourcesContent":["import { connection } from '../database/connection'\nimport Util from '../helpers/Util'\nconst db = connection\nclass Model{\n    constructor(table){\n        this.table = table\n    }\n    async all(){\n        if(!this.table) return false\n        try{\n            const data =  await db(this.table).select('*')\n            if(!data || data === undefined || data == '') return false\n            return data\n        }catch(e){\n            throw new Error(e)\n        }\n    }\n\n    async get(filterItems, isFirst = false){\n        if(!this.table) return false\n        let data\n        try{\n            if(isFirst) \n                data = await db(this.table).select('*').where(filterItems).first()\n            else\n                data = await db(this.table).select('*').where(filterItems)  \n            \n            if(!data || data === null || data === undefined || data == '') return false\n\n            return data\n            \n        }catch(e){\n            throw new Error(e)\n        }\n    }\n\n    async insert(data){\n        if(!this.table) return false\n        try{\n            if(!data) throw new Error(`Data is required to insert into '${this.table}'!`)\n            const inserted = await db(this.table).insert(data)\n            if(!inserted || inserted === undefined || inserted == '') return false\n\n            return true\n\n        }catch(e){\n            throw new Error(e)\n        }\n    }\n\n    async delete(filterItems){\n        if(!this.table) return false\n        try{\n            const deleted = await db(this.table).where(filterItems).delete()\n            if(!deleted || deleted === undefined || deleted == '') return false\n        }catch(e){\n            throw new Error(e)\n        }\n    }\n\n    async update(filterItems, data){\n        if(!this.table) return false\n        try{\n            const updated = await db(this.table).update(data).where(filterItems)\n            if(!updated || updated === undefined || updated == '') return false\n        }catch(e){\n            throw new Error(e)\n        }\n    }\n}\nexport default Model;"]}