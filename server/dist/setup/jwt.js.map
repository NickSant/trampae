{"version":3,"sources":["../../src/setup/jwt.js"],"names":["generateToken","decodeToken","secret","process","env","SECRET_JWT","payload","jwt","sign","expiresIn","token","verify"],"mappings":";;;;;QAIgBA,a,GAAAA,a;QAKAC,W,GAAAA,W;;AAThB;;;;;;AAEA,IAAMC,SAASC,QAAQC,GAAR,CAAYC,UAA3B;AACA;AACO,SAASL,aAAT,CAAuBM,OAAvB,EAA+B;AAClC,WAAOC,uBAAIC,IAAJ,CAASF,OAAT,EAAkBJ,MAAlB,EAA0B;AAC7BO,mBAAW,KADkB,CACZ;AADY,KAA1B,CAAP;AAGH;AACM,SAASR,WAAT,CAAqBS,KAArB,EAA2B;AAC9B,WAAOH,uBAAII,MAAJ,CAAWD,KAAX,EAAkBR,MAAlB,CAAP;AACH","file":"jwt.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst secret = process.env.SECRET_JWT;\n//payload = dado que vai ser criptografado\nexport function generateToken(payload){\n    return jwt.sign(payload, secret, {\n        expiresIn: 28800,//Esse token é válido em até 8 HORAS!!\n    });\n}\nexport function decodeToken(token){\n    return jwt.verify(token, secret);\n}\n"]}