{"version":3,"sources":["../../../src/setup/middlewares/admin.js"],"names":["jwt","Util","handleError","isAdminID","module","exports","req","res","next","headers","authorization","split","hashType","token","console","log","undefined","decodeToken","payload","admin_id","isAdmin","name","message","adminMiddleware"],"mappings":";;;;AAAA;;IAAYA,G;;AACZ;;;;AACA;;;;;;;;;;WACiC,IAAIC,cAAJ,E;IAA1BC,W,QAAAA,W;IAAaC,S,QAAAA,S;;AAEpBC,OAAOC,OAAP;AAAA,wEAAiB,iBAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACb,4BAAG,CAACF,IAAIG,OAAJ,CAAYC,aAAhB,EAA+BR,YAAYK,GAAZ,EAAiB,GAAjB,EAAsB,gBAAtB;AADlB,gDAEaD,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,CAFb,qEAENC,QAFM,8BAEIC,KAFJ,8BAEiD;;AAFjD;;AAKTC,gCAAQC,GAAR,CAAY,+BAAZ;AACAD,gCAAQC,GAAR,CAAYF,KAAZ;;AANS,8BAONA,UAAUG,SAAV,IAAuB,CAACH,KAPlB;AAAA;AAAA;AAAA;;AAAA,yDAOgCX,YAAYK,GAAZ,EAAiB,GAAjB,EAAsB,oBAAtB,CAPhC;;AAAA;AAAA;AAAA,+BASaP,IAAIiB,WAAJ,CAAgBJ,KAAhB,CATb;;AAAA;AASHK,+BATG;AASmC;;AAE5CJ,gCAAQC,GAAR,CAAY,2BAAZ,EAXS,CAW+B;;AAElCI,gCAbG,GAaQD,QAAQC,QAbhB;;;AAeTL,gCAAQC,GAAR,CAAY,IAAZ,EAAkBI,QAAlB;;AAfS,4BAgBLA,QAhBK;AAAA;AAAA;AAAA;;AAAA,yDAgBYjB,YAAYK,GAAZ,EAAiB,GAAjB,EAAsB,iBAAtB,CAhBZ;;AAAA;AAAA,4BAkBJJ,UAAUgB,QAAV,CAlBI;AAAA;AAAA;AAAA;;AAAA,yDAkByBjB,YAAYK,GAAZ,EAAiB,GAAjB,EAAsB,gBAAtB,CAlBzB;;AAAA;;AAoBTD,4BAAIG,OAAJ,CAAYW,OAAZ,GAAsB,IAAtB;;AAEAZ,+BAtBS,CAsBH;AAtBG;AAAA;;AAAA;AAAA;AAAA;AAAA,yDAwBFN,YAAYK,GAAZ,EAAiB,GAAjB,4BAA8C,YAAIc,IAAlD,uBAAwE,YAAIC,OAA5E,CAxBE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAAA,aAAgCC,eAAhC;AAAA;AAAA;;AAAA,WAAgCA,eAAhC;AAAA","file":"admin.js","sourcesContent":["import * as jwt from '../jwt';\nimport connection from '../../database/connection';\nimport Util from '../../helpers/Util';\nconst {handleError, isAdminID} = new Util();\n\nmodule.exports = async function adminMiddleware(req, res, next){\n    if(!req.headers.authorization) handleError(res, 401, 'Não autorizado')\n    const [hashType, token] = req.headers.authorization.split(' ')//Bearer Authorization\n\n    try{\n        console.log('PASSANDO PELO MIDDLEWARE.....')\n        console.log(token)\n        if(token === undefined || !token) return handleError(res, 401, 'Token não definido')\n            \n        const payload = await jwt.decodeToken(token)//setado no login ou cadastro!!!\n        \n        console.log('Admin existe por enquanto')//pq se conseguir fazer o decode, significa que existe! Se não conseguir, ele cai no catch!\n        \n        const admin_id = payload.admin_id\n        \n        console.log('id', admin_id)\n        if(!admin_id) return handleError(res, 401, 'Não autorizado!')\n\n        if( !isAdminID(admin_id) ) return handleError(res, 401, 'Não autorizado')\n\n        req.headers.isAdmin = true\n\n        next()//FUNÇÃO QUE PERMITE ACESSAR AS PRÓXIMAS ROTAS!!\n    }catch(err){\n        return handleError(res, 401, `(auth.js)\\nERR NAME: ${err.name}\\nERR MESSAGE: ${err.message}`)\n    }\n  }\n"]}