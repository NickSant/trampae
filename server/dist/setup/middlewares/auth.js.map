{"version":3,"sources":["../../../src/setup/middlewares/auth.js"],"names":["jwt","Util","handleError","module","exports","req","res","next","headers","authorization","split","hashType","token","console","log","undefined","decodeToken","payload","id_user","user_id","select","where","first","result","name","password","auth","message","authMiddleware"],"mappings":";;;;AAAA;;IAAYA,G;;AACZ;;;;AACA;;;;;;;;;;WACsB,IAAIC,cAAJ,E;IAAfC,W,QAAAA,W;;AACPC,OAAOC,OAAP;AAAA,wEAAiB,iBAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACb,4BAAG,CAACF,IAAIG,OAAJ,CAAYC,aAAhB,EAA+BP,YAAYI,GAAZ,EAAiB,GAAjB,EAAsB,gBAAtB;AADlB,gDAEaD,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,CAFb,qEAENC,QAFM,8BAEIC,KAFJ,8BAEkD;;AAFlD;;AAKTC,gCAAQC,GAAR,CAAY,+BAAZ;AACAD,gCAAQC,GAAR,CAAYF,KAAZ;;AANS,8BAONA,UAAUG,SAAV,IAAuB,CAACH,KAPlB;AAAA;AAAA;AAAA;;AAAA,yDAOgCV,YAAYI,GAAZ,EAAiB,GAAjB,EAAsB,iBAAtB,CAPhC;;AAAA;AAAA;AAAA,+BASaN,IAAIgB,WAAJ,CAAgBJ,KAAhB,CATb;;AAAA;AASHK,+BATG;AASoC;;AAE7CJ,gCAAQC,GAAR,CAAY,+BAAZ,EAXS,CAWoC;AACvCI,+BAZG,GAYOD,QAAQE,OAZf;;;AAcTN,gCAAQC,GAAR,UAAmBI,OAAnB,EAdS,CAcqB;;AAdrB,4BAgBLA,OAhBK;AAAA;AAAA;AAAA;;AAAA,yDAgBWhB,YAAYI,GAAZ,EAAiB,GAAjB,EAAsB,eAAtB,CAhBX;;AAAA;AAAA;AAAA,+BAkBY,0BAAW,OAAX,EAAoBc,MAApB,CAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,IAAtC,EAA4CH,OAA5C,EAAqDI,KAArD,EAlBZ;;AAAA;AAkBHC,8BAlBG;;;AAoBTV,gCAAQC,GAAR,2BAAiCS,OAAOC,IAAxC;;AAEA,+BAAOD,OAAOE,QAAd,CAtBS,CAsBc;;AAEvBpB,4BAAIqB,IAAJ,GAAWH,MAAX,CAxBS,CAwBS;;AAElBhB,+BA1BS,CA0BF;AA1BE;AAAA;;AAAA;AAAA;AAAA;AAAA,yDA4BFL,YAAYI,GAAZ,EAAiB,GAAjB,4BAA8C,YAAIkB,IAAlD,uBAAwE,YAAIG,OAA5E,CA5BE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAAA,aAAgCC,cAAhC;AAAA;AAAA;;AAAA,WAAgCA,cAAhC;AAAA","file":"auth.js","sourcesContent":["import * as jwt from '../jwt';\nimport connection from '../../database/connection';\nimport Util from '../../helpers/Util';\nconst {handleError} = new Util();\nmodule.exports = async function authMiddleware(req, res, next){\n    if(!req.headers.authorization) handleError(res, 401, 'Não autorizado')\n    const [hashType, token] = req.headers.authorization.split(' ');//Bearer Authorization\n\n    try{\n        console.log('PASSANDO PELO MIDDLEWARE.....');\n        console.log(token)\n        if(token === undefined || !token) return handleError(res, 401, 'Undefined Token');\n            \n        const payload = await jwt.decodeToken(token);//setado no login ou cadastro!!!\n        \n        console.log('Esse cara existe por enquanto');//pq se conseguir fazer o decode, significa que existe! Se não conseguir, ele cai no catch!\n        const id_user = payload.user_id;\n        \n        console.log(`ID: ${id_user}`);//esse parâmetro user.id é gerado no momento do login ou cadastro!!!\n\n        if(!id_user) return handleError(res, 401, 'Unauthorized!');\n         \n        const result = await connection('users').select('*').where('id', id_user).first();\n        \n        console.log(`Usuário validado: ${result.name}`);\n\n        delete result.password;//retira o índice password do objeto retornado\n\n        req.auth = result;//setando qual usuário está logado através do auth da requisição\n\n        next();//FUNÇÃO QUE PERMITE ACESSAR AS PRÓXIMAS ROTAS!!\n    }catch(err){\n        return handleError(res, 401, `(auth.js)\\nERR NAME: ${err.name}\\nERR MESSAGE: ${err.message}`);\n    }\n  }\n"]}