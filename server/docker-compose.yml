version: '3'

services: #containers
    mysqlsrv:
        image: mysql:5.7
        volumes:
            - ./containers/mysql/create_db.sql:/docker-entrypoint-initdb.d/01.sql

            #copiando script para executar arquivos mysql, que estar√£o dentro de '/docker-entrypoint-initdb.d/'
            - ./containers/mysql/db_entrypoint.sh:/iniciar_sql

            #mysql data volume - persistindo dados
            - dbdata:/var/lib/mysql

        command: "--init-file /docker-entrypoint-initdb.d/01.sql"
            # - ./iniciar_sql # esse seria o volume que criei acima - com o script db_entrypoint.sh

        environment:
            MYSQL_ROOT_PASSWORD: ${PASS_DB}
            MYSQL_DATABASE: ${DATABASE}
        ports:
            - "3306:3306"
        networks:
            - mysql-compose-network
        restart: unless-stopped
    # administrador mysql
    adminer:
        image: phpmyadmin/phpmyadmin
        ports:
            - 8080:80
        networks:
            - mysql-compose-network 
        environment: 
            PMA_ARBITRARY: 1
            PMA_HOST: mysqlsrv
            MYSQL_USER: user
            MYSQL_ROOT_PASSWORD: ${PASS_DB}
            PMA_PORT: 3306
        depends_on: 
            - mysqlsrv
    
    nodejs:
        depends_on: 
            - mysqlsrv
        networks:
            - mysql-compose-network 
        env_file: .env  
        environment: 
            DB_HOST: mysqlsrv
        build: 
            context: .
            dockerfile: Dockerfile
        image: nodejs
        ports: 
            - 3331:3333
        container_name: nodejs
        
        restart: unless-stopped

volumes: 
    dbdata:
        driver: local    

networks: 
    mysql-compose-network:
        driver: bridge
