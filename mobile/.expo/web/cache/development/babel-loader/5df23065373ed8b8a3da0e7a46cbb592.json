{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAreaView = SafeAreaView;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _SafeAreaContext = require(\"./SafeAreaContext\");\n\nvar _jsxFileName = \"/Users/janic/Developer/react-native-safe-area-context/src/SafeAreaView.tsx\";\nvar TOP = 8,\n    RIGHT = 8,\n    BOTTOM = 8,\n    LEFT = 8,\n    ALL = 15;\nvar edgeBitmaskMap = {\n  top: 8,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\n\nfunction SafeAreaView(_ref) {\n  var style = _ref.style,\n      mode = _ref.mode,\n      edges = _ref.edges,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"style\", \"mode\", \"edges\"]);\n  var insets = (0, _SafeAreaContext.useSafeAreaInsets)();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    var flatStyle = _reactNative.StyleSheet.flatten(style);\n\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n          margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n          _flatStyle$marginVert = flatStyle.marginVertical,\n          marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n          _flatStyle$marginHori = flatStyle.marginHorizontal,\n          marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n          _flatStyle$marginTop = flatStyle.marginTop,\n          marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n          _flatStyle$marginRigh = flatStyle.marginRight,\n          marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n          _flatStyle$marginBott = flatStyle.marginBottom,\n          marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n          _flatStyle$marginLeft = flatStyle.marginLeft,\n          marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n          padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n          _flatStyle$paddingVer = flatStyle.paddingVertical,\n          paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n          _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n          paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n          _flatStyle$paddingTop = flatStyle.paddingTop,\n          paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n          _flatStyle$paddingRig = flatStyle.paddingRight,\n          paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n          _flatStyle$paddingBot = flatStyle.paddingBottom,\n          paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n          _flatStyle$paddingLef = flatStyle.paddingLeft,\n          paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: appliedStyle\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["SafeAreaView.tsx"],"names":["TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","style","mode","edges","rest","insets","edgeBitmask","accum","appliedStyle","React","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b1000,\n      BOTTOM = 0b1000,\n      LEFT   = 0b1000,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: 0b1000,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style,\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"script"}