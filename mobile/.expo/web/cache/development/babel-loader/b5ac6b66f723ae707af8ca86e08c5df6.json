{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\tcc\\\\trampae\\\\mobile\\\\src\\\\pages\\\\Register\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { useNavigation } from '@react-navigation/native';\nimport { TextInput, FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { Feather } from '@expo/vector-icons';\nimport estilo from \"./styles\";\nimport logoImg from \"../../assets/icon.png\";\nimport api from \"../../services/api\";\nexport default function Index() {\n  var nav = useNavigation();\n\n  function backToLogin() {\n    nav.navigate('login');\n  }\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setMail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      whats = _useState6[0],\n      setWhats = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pass = _useState8[0],\n      setPass = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pickedCity = _useState10[0],\n      setPickedCity = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pickedUf = _useState12[0],\n      setPickedUf = _useState12[1];\n\n  function log(e) {\n    console.log(e);\n  }\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ufs = _useState14[0],\n      setUfs = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cities = _useState16[0],\n      setCities = _useState16[1];\n\n  function fetchUfs() {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome').then(function (res) {\n      var siglas = res.data.map(function (estado) {\n        return estado.sigla;\n      });\n      setUfs(siglas);\n    });\n  }\n\n  useEffect(fetchUfs, []);\n\n  function fetchCities() {\n    axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados/\" + pickedUf + \"/municipios\").then(function (res) {\n      var cidades = res.data.map(function (cidade) {\n        delete cidade.municipio;\n        return cidade;\n      });\n      setCities(cidades);\n    }).catch(function (e) {\n      ToastAndroid.show(\"Erro ao buscar os munic\\xEDpios da UF \" + pickedUf + \" \\nTente novamente mais tarde\", 10000);\n    });\n  }\n\n  useEffect(fetchCities, [pickedUf]);\n\n  function submit() {\n    AsyncStorage.clear();\n    var body = {\n      name: name,\n      email: email,\n      whatsapp: whats,\n      password: pass,\n      city: pickedCity,\n      uf: pickedUf\n    };\n    fetch(api + \"/signup\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(function (res) {\n      res.json().then(function (data) {\n        var token = data.token;\n        AsyncStorage.setItem('token', token);\n        ToastAndroid.show(\"Usu\\xE1rio \" + body.name + \" criado com sucesso!\\nVoc\\xEA ser\\xE1 redirecionado \\xE0 Home!\", ToastAndroid.LONG);\n        nav.navigate('home');\n      });\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  }\n\n  return React.createElement(View, {\n    style: estilo.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    collapsable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: estilo.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: estilo.img_logo,\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: estilo.p_header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Trampa\\xEA\")), React.createElement(View, {\n    style: estilo.container_login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: estilo.title_login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Cadastro\"), React.createElement(View, {\n    style: estilo.input_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    onChange: function onChange(e) {\n      return setName(e.nativeEvent.text);\n    },\n    placeholder: \"Nome\",\n    keyboardType: \"default\",\n    style: estilo.input,\n    autoCapitalize: \"none\",\n    allowFontScaling: false,\n    autoCorrect: false,\n    autoCompleteType: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: estilo.input_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    onChange: function onChange(e) {\n      return setMail(e.nativeEvent.text);\n    },\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    multiline: false,\n    style: estilo.input,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    allowFontScaling: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: estilo.input_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    onChange: function onChange(e) {\n      return setWhats(e.nativeEvent.text);\n    },\n    placeholder: \"Whatsapp\",\n    keyboardType: \"phone-pad\",\n    multiline: false,\n    style: estilo.input,\n    autoCapitalize: \"none\",\n    allowFontScaling: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: estilo.input_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker, {\n    selectedValue: pickedUf,\n    onValueChange: function onValueChange(value) {\n      return setPickedUf(value);\n    },\n    style: estilo.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"UF\",\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), ufs.map(function (uf) {\n    return React.createElement(Picker.Item, {\n      label: uf,\n      value: uf,\n      key: uf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    });\n  }))), React.createElement(View, {\n    style: estilo.input_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker, {\n    selectedValue: pickedCity,\n    onValueChange: function onValueChange(value) {\n      return setPickedCity(value);\n    },\n    style: estilo.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Cidade\",\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }), cities.map(function (city) {\n    return React.createElement(Picker.Item, {\n      label: city.nome,\n      value: city.nome,\n      key: city.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    });\n  }))), React.createElement(View, {\n    style: estilo.input_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    onChange: function onChange(e) {\n      return setPass(e.nativeEvent.text);\n    },\n    placeholder: \"Senha\",\n    keyboardType: \"visible-password\",\n    multiline: false,\n    style: estilo.input,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    allowFontScaling: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: estilo.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    onPress: submit,\n    style: estilo.p_button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Cadastrar\")), React.createElement(TouchableOpacity, {\n    onPress: backToLogin,\n    style: estilo.link_cadastro,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, React.createElement(Feather, {\n    name: 'arrow-left',\n    size: 18,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: estilo.p_link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Voltar para o Login\")))));\n}","map":{"version":3,"sources":["C:/tcc/trampae/mobile/src/pages/Register/index.js"],"names":["React","useState","useEffect","axios","useNavigation","TextInput","FlatList","ScrollView","Feather","estilo","logoImg","api","Index","nav","backToLogin","navigate","name","setName","email","setMail","whats","setWhats","pass","setPass","pickedCity","setPickedCity","pickedUf","setPickedUf","log","e","console","ufs","setUfs","cities","setCities","fetchUfs","get","then","res","siglas","data","map","estado","sigla","fetchCities","cidades","cidade","municipio","catch","ToastAndroid","show","submit","AsyncStorage","clear","body","whatsapp","password","city","uf","fetch","method","headers","JSON","stringify","json","token","setItem","LONG","container","header","img_logo","p_header","container_login","title_login","input_group","nativeEvent","text","input","value","nome","id","button","p_button","link_cadastro","p_link"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { View, Text, Image, Button, TouchableOpacity, ToastAndroid, Picker, AsyncStorage} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { TextInput, FlatList, ScrollView } from 'react-native-gesture-handler';\r\nimport {Feather} from '@expo/vector-icons';\r\n\r\nimport estilo from './styles';\r\nimport logoImg from '../../assets/icon.png';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Index(){\r\n    \r\n\r\n    const nav = useNavigation();\r\n\r\n    function backToLogin(){\r\n        nav.navigate('login')\r\n    }\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setMail] = useState('');\r\n    const [whats, setWhats] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [pickedCity, setPickedCity] = useState('');\r\n    const [pickedUf, setPickedUf] = useState('');\r\n\r\n    function log(e){\r\n        console.log(e)\r\n    }\r\n\r\n    // API IBGE  --------------------------------------------------------------------\r\n    const [ufs, setUfs] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    function fetchUfs(){\r\n        \r\n        axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome')\r\n        .then( res =>{\r\n            const siglas = res.data.map( estado => estado.sigla);\r\n            setUfs(siglas);\r\n        })\r\n\r\n    }\r\n\r\n    useEffect( fetchUfs, []);\r\n\r\n    function fetchCities(){\r\n        \r\n        axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${pickedUf}/municipios`)\r\n        .then( res =>{\r\n            const cidades = res.data.map( cidade =>{\r\n                delete cidade.municipio;\r\n                return cidade;\r\n            });\r\n            setCities(cidades);\r\n        })\r\n        .catch(e =>{\r\n            ToastAndroid.show(`Erro ao buscar os municípios da UF ${pickedUf} \\nTente novamente mais tarde`,10000)\r\n        })\r\n    }\r\n\r\n    useEffect( fetchCities, [pickedUf] );\r\n\r\n\r\n    //submit\r\n    function submit(){\r\n        AsyncStorage.clear();\r\n        \r\n        //Criar gif para aguardar! no onclick do button!!!\r\n\r\n        const body = {\r\n            name: name,\r\n            email: email,\r\n            whatsapp: whats,\r\n            password: pass,\r\n            city: pickedCity,\r\n            uf: pickedUf,\r\n        }\r\n\r\n        fetch(`${api}/signup`,{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body:JSON.stringify(body),\r\n        }).then( res =>{\r\n            res.json().then( (data) => {\r\n\r\n                const token = data.token;\r\n                AsyncStorage.setItem('token',token);\r\n                ToastAndroid.show(`Usuário ${body.name} criado com sucesso!\\nVocê será redirecionado à Home!`, ToastAndroid.LONG )\r\n                nav.navigate('home')\r\n            } )\r\n        })\r\n        .catch(e =>console.log(e))\r\n\r\n        // api.post('/signup',body)\r\n        // .then( res =>{\r\n        //     console.log(res.data);\r\n        //     console.log(res.status)\r\n        // } )\r\n        // .catch(e => console.log(e)) \r\n    }\r\n\r\n    return(\r\n        <View style={estilo.container}>\r\n            <ScrollView collapsable={false}>\r\n                <View style={estilo.header}>\r\n                    <Image style={estilo.img_logo} source={logoImg}/>\r\n                    <Text style={estilo.p_header}>Trampaê</Text>\r\n                </View>\r\n            \r\n                <View style={estilo.container_login}>\r\n                    <Text style={estilo.title_login}>Cadastro</Text>\r\n                    <View style={estilo.input_group}>\r\n                        \r\n                        <TextInput \r\n                            onChange={e => setName(e.nativeEvent.text)}\r\n                            placeholder=\"Nome\"\r\n                            keyboardType=\"default\" \r\n                            style={estilo.input}\r\n                            autoCapitalize=\"none\"\r\n                            allowFontScaling={false}\r\n                            autoCorrect={false}\r\n                            autoCompleteType='off'\r\n                        />\r\n                    </View>\r\n                    <View style={estilo.input_group}>\r\n                        \r\n                        <TextInput \r\n                            onChange={e => setMail(e.nativeEvent.text)}\r\n                            placeholder=\"Email\"\r\n                            keyboardType=\"email-address\" \r\n                            multiline={false}  \r\n                            style={estilo.input}\r\n                            secureTextEntry={true}\r\n                            autoCapitalize=\"none\"\r\n                            allowFontScaling={false}\r\n                        />\r\n                    </View>\r\n                    <View style={estilo.input_group}>\r\n                        \r\n                        <TextInput \r\n                            onChange={e => setWhats(e.nativeEvent.text)}\r\n                            placeholder=\"Whatsapp\"\r\n                            keyboardType=\"phone-pad\" \r\n                            multiline={false}  \r\n                            style={estilo.input}\r\n                            autoCapitalize=\"none\"\r\n                            allowFontScaling={false}\r\n                        />\r\n                    </View>\r\n                    <View style={estilo.input_group}>\r\n\r\n                        <Picker \r\n                            selectedValue={pickedUf}\r\n                            onValueChange={ value => setPickedUf(value) }\r\n                            style={estilo.input}\r\n                        >\r\n                            <Picker.Item label=\"UF\" value=\"default\" />\r\n                            {ufs.map( uf =>{\r\n                                return(\r\n                                    <Picker.Item label={uf} value={uf} key={uf} />\r\n                                );\r\n                            })}\r\n                        </Picker>\r\n\r\n                    </View>\r\n                    <View style={estilo.input_group}>\r\n                        \r\n                        <Picker\r\n                            selectedValue={pickedCity}\r\n                            onValueChange={ value => setPickedCity(value) }\r\n                            style={estilo.input} \r\n                        >     \r\n                            <Picker.Item label=\"Cidade\" value=\"default\" />\r\n\r\n                            {cities.map(city =>{\r\n                                return(\r\n                                    <Picker.Item label={city.nome} value={city.nome} key={city.id}/>\r\n                                );\r\n                            })}\r\n\r\n                        </Picker>\r\n\r\n                    </View>\r\n                    \r\n                    <View style={estilo.input_group}>\r\n                        \r\n                        <TextInput \r\n                            onChange={ e => setPass(e.nativeEvent.text) }\r\n                            placeholder=\"Senha\"\r\n                            keyboardType=\"visible-password\" \r\n                            multiline={false}  \r\n                            style={estilo.input}\r\n                            secureTextEntry={true}\r\n                            autoCapitalize=\"none\"\r\n                            allowFontScaling={false}\r\n                        />\r\n                    </View>\r\n                    <TouchableOpacity style={estilo.button}>\r\n                        <Text onPress={submit} style={estilo.p_button}>Cadastrar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={backToLogin} style={estilo.link_cadastro}>\r\n                        <Feather name={'arrow-left'} size={18} color='#fff'/>\r\n                        <Text style={estilo.p_link}>Voltar para o Login</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}