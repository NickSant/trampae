{"version":3,"sources":["NativeSafeAreaProvider.tsx"],"names":["CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaView","children","style","onInsetsChange","React","useEffect","document","element","createContextElement","body","appendChild","onEnd","window","getComputedStyle","paddingTop","paddingBottom","paddingLeft","paddingRight","insets","top","parseInt","bottom","left","right","frame","x","y","width","documentElement","offsetWidth","height","offsetHeight","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","_supportedTransitionEvent","createElement","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport { NativeSafeAreaProviderProps } from './SafeArea.types';\n\n/**\n * TODO:\n * Currently insets and frame are based on the window and are not\n * relative to the provider view. This is inconsistent with iOS and Android.\n * However in most cases if the provider view covers the screen this is not\n * an issue.\n */\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport default function NativeSafeAreaView({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaProviderProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const {\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n      } = window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets, frame } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent !== null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n"]}